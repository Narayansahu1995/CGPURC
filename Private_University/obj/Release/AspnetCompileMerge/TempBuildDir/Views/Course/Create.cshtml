@using Private_University.Models;
@model Private_University.Models.university_course_insert

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style type="text/css">
    .text-danger {
        width: auto;
        background-color: #dfe7f2;
        box-shadow: 2px 2px 6px darkslategray;
        color: navy;
        text-align: center;
        border-radius: 6px;
        padding: 5px;
        position: relative;
        z-index: 1;
        font-weight: bold;
        top: 5px;
        left: 5px;
        display:none;        
    }

        .text-danger::after {
            content: "";
            padding: 0;
            position: absolute;
            bottom: 100%;
            left: 8%;
            margin-left: -10px;
            border-width: 10px;
            border-style: solid;
            border-color: transparent transparent #dfe7f2 transparent;
            font-size: 14pt;
            font-weight: bold;
        }
</style>



<div class="sb2-2-2">
    <ul>
        <li>
            <a href="@Url.Action("Index","Dashboard")"><i class="fa fa-home" aria-hidden="true"></i> Home</a>
        </li>
        <li class="active-bre">
            <a href="@Url.Action("Index","Dashboard")"> Dashboard</a>
        </li>
        <li class="page-back">
            <a href="@Url.Action("Index","Course")"><i class="fa fa-backward" aria-hidden="true"></i> Back to List</a>
        </li>
    </ul>
</div>
@{
    if (TempData["Msg"] != null)
    {
        @Html.Raw(TempData["Msg"])

    }
}

<!--== DASHBOARD INFO ==-->
<div class="sb2-2-3">
    <div class="row">
        <div class="col-md-12">
            <div class="box-inn-sp admin-form">
                <div class="inn-title">
                    <h4>NEW COURSE</h4>
                    @*<p>All about courses, program structure, fees, best course lists (ranking), syllabus, teaching techniques and other details.</p>*@
                </div>
                <div class="tab-inn">

                    @using (Html.BeginForm("Create", "Course", FormMethod.Post, new { enctype = "multipart/form-data", Class = "s12" }))
                    {
                        @Html.AntiForgeryToken()
                        AuthenticationResponse ARespo = (AuthenticationResponse)Session["AuthResponse"];

                        <div class="form-horizontal">

                            @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.Univ_Course_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Univ_Course_Name, new { @class = "validate" }) 
                                    @Html.ValidationMessageFor(model => model.Univ_Course_Name, "", new { @class = "text-danger", style = "display:none;" })                                   
                                </div>
                               
                            </div>
                           
                            <div class="form-group">
                                @Html.LabelFor(model => model.Univ_Course_Code, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Univ_Course_Code, new { @class = "validate" })
                                    @Html.ValidationMessageFor(model => model.Univ_Course_Code, "", new { @class = "text-danger", style = "display:none;" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Course_Mode_ID, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.Course_Mode_ID, new SelectList(ViewBag.CourseMode, "Value", "Text"), "-- Please Select Course Mode --", new { @class = "form-control validate" } )
                                    @Html.ValidationMessageFor(model => model.Course_Mode_ID, "", new { @class = "text-danger", style = "display:none;" })
                               

                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Number_of_Year_Sem, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                               
                                    @Html.TextBoxFor(model => model.Number_of_Year_Sem, new  { @class = "validate", @maxlength = "4" } ) 
                                    @Html.ValidationMessageFor(model => model.Number_of_Year_Sem, "", new { @class = "text-danger", style = "display:none;" })
                                    @Html.HiddenFor(model => model.University_ID, new { Value = ARespo.University_ID })
                                    @Html.HiddenFor(model => model.Entry_By, new { Value = ARespo.Login_ID })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-6 col-md-6">
                                    <input type="submit" value="Create" class="waves-effect waves-light light-btn waves-input-wrapper waves-button-input" />
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        
        for (var i = 0 ; i <= $('.text-danger').length ; i++) {
            
            if($('.text-danger:eq('+i+')').text().length>0)
            {
                $('.text-danger:eq(' + i + ')').css("display", "initial");
            }
            else
            {
                $('.text-danger:eq(' + i + ')').css("display", "none");
            }
        }

        $('.validate').change(function () {                       
            var i = $(".validate").index($(this));
           // alert("Val =" + $(".validate:eq(" + i + ")").val() + "Length =" + $(".validate:eq(" + i + ")").val().length);
            if($(".validate:eq(" + i + ")").val().length>0)
            {
                $('.text-danger:eq(' + i + ')').text("");
                $('.text-danger:eq(' + i + ')').css("display", "none");
            }            
        });


        
        $('#Number_of_Year_Sem').keypress(function (evt) {          
            var data = $('#Number_of_Year_Sem').val();
            if((evt.charCode>= 48 && evt.charCode <= 57) || evt.charCode== 46 ||evt.charCode == 0){            
                if (data.indexOf('.') > -1) {
                    if (evt.charCode == 46)
                    {
                        evt.preventDefault();
                        $(".text-danger:eq(3)").text("");
                        $(".text-danger:eq(3)").css("display", "none");                        
                    }                       
                }
            } else
            {
                evt.preventDefault();
                $(".text-danger:eq(3)").text("Enter numbers only");
                $(".text-danger:eq(3)").css("display", "initial");
            }
                
        });
        });
</script>


