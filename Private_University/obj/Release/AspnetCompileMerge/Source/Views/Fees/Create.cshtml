@using Private_University.Models;
@model Private_University.Models.University_Fees_Insert
@{
	ViewBag.Title = "Create";
	Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="sb2-2-2">
	<ul>
		<li>
			<a href="#"><i class="fa fa-home" aria-hidden="true"></i> Home</a>
		</li>
		<li class="active-bre">
			<a href="#"> Dashboard</a>
		</li>
		<li class="page-back">
			<a href="#"><i class="fa fa-backward" aria-hidden="true"></i> Back</a>
		</li>
	</ul>
</div>

@{
	if (TempData["Msg"] != null)
	{
		@Html.Raw(TempData["Msg"])

	}
}

<!--== DASHBOARD INFO ==-->
<div class="sb2-2-3">
	<div class="row">
		<div class="col-md-12">
			<div class="box-inn-sp admin-form">
				<div class="inn-title">
					<h4>UPDATE FEES</h4>
				</div>
				<div class="tab-inn">
					@using (Html.BeginForm("Create", "Fees", FormMethod.Post, new { Class = "s12" }))
					{
						@Html.AntiForgeryToken()
						AuthenticationResponse ARespo = (AuthenticationResponse)Session["AuthResponse"];
						<div class="row">
							<div class="form-horizontal">
								@Html.ValidationSummary(true, "", new { @class = "text-danger" })
								<div class="form-group">
									@Html.LabelFor(model => model.Univ_Course_ID, htmlAttributes: new { @class = "control-label col-md-3" })
									<div class="col-md-9">
										@Html.TextBoxFor(model => model.Univ_Course_ID, new { Value = ViewBag.course_Name, disabled = "disabled", htmlAttributes = new { @class = "validate" } })
										@Html.ValidationMessageFor(model => model.Univ_Course_ID, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.Univ_subCourse_ID, htmlAttributes: new { @class = "control-label col-md-3" })
									<div class="col-md-9">
										@Html.TextBoxFor(model => model.Univ_subCourse_ID, new { Value = ViewBag.subCourse_Name, disabled = "disabled", htmlAttributes = new { @class = "validate" } })
										@Html.ValidationMessageFor(model => model.Univ_subCourse_ID, "", new { @class = "text-danger" })

										@Html.HiddenFor(model => model.Univ_Course_ID, new { Value = ViewBag.Univ_Course_ID })
										@Html.HiddenFor(model => model.Univ_subCourse_ID, new { Value = ViewBag.Univ_subCourse_ID })
										@Html.HiddenFor(model => model.University_ID, new { Value = ARespo.University_ID })
										@Html.HiddenFor(model => model.Entry_By, new { Value = ARespo.Login_ID })
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							<div class="table-responsive table-desi">
								<table class="table table-hover">
									<thead>
										<tr>
											<th>Semester/Year</th>
											<th>Fees [Amount]</th>
										</tr>
									</thead>
									<tbody>
										@{
											if (TempData["FeeList"] != null)
											{
												List<Sem_Years_fee> SY = TempData["FeeList"] as List<Sem_Years_fee>;

												foreach (var item in SY)
												{
													<tr>
														<td>
															@Html.DisplayFor(model => item.Sementer_Year, new { Name = "Sementer_Year[]" })
															@Html.HiddenFor(model => item.count, new { Name = "semYear", Value = item.count })
														</td>
														<td>
															@Html.TextBoxFor(model => item.Fees, new { Name = "Fees", Value = item.Fees, htmlAttributes = new { @class = "validate" } })
															@Html.ValidationMessageFor(model => item.Fees, "", new { @class = "text-danger" })
														</td>
													</tr>
												}
											}
										}
									</tbody>

								</table>
							</div>
						</div>


						<div class="form-group">
							<div class="col-md-offset-6 col-md-6">
								<input type="submit" value="Create" class="waves-effect waves-light light-btn waves-input-wrapper waves-button-input" />
							</div>
						</div>
					}

				</div>
			</div>
		</div>
	</div>
</div>
